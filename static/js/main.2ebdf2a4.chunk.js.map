{"version":3,"sources":["components/TicketCard.js","components/GroupSelector.js","components/SortSelector.js","components/KanbanBoardComponent.js","services/ticketApi.js","App.js","reportWebVitals.js","index.js"],"names":["TicketCard","_ref","ticket","id","title","tag","React","createElement","className","src","alt","style","color","type","name","join","GroupSelector","grouping","setGrouping","value","onChange","e","target","SortSelector","sorting","setSorting","KanbanBoardComponent","tickets","setTickets","useState","users","setUsers","useEffect","async","data","userId","status","priority","available","fetchTickets","loadTickets","groupedTickets","reduce","acc","groupKey","user","find","u","push","sortedGroups","Object","keys","sort","a","b","localeCompare","map","group","key","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2ebdf2a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/TicketStyles.css\";\r\n\r\nconst TicketCard = ({ ticket }) => {\r\n  const { id, title, tag } = ticket;\r\n\r\n  return (\r\n    <div className=\"ticket-card\">\r\n      {/* Add a static image to the top-right corner */}\r\n      <img\r\n        src=\"path-to-your-default-image.jpg\" // Replace with your actual image path\r\n        alt=\"User Avatar\"\r\n        className=\"ticket-card-top-right-image\"\r\n      />\r\n      <div style={{ color: \"lightgray\" }}>{id}</div>\r\n      <label>\r\n        <input type=\"radio\" name=\"ticket-title\" />\r\n        {title}\r\n      </label>\r\n      <p>{tag.join(\", \")}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicketCard;","// src/components/GroupSelector.js\r\nimport React from \"react\";\r\nimport \"../styles/GroupSelectorStyles.css\";\r\n\r\nconst GroupSelector = ({ grouping, setGrouping }) => {\r\n  return (\r\n    <div className=\"group-selector\">\r\n      <label>Group by:</label>\r\n      <select value={grouping} onChange={(e) => setGrouping(e.target.value)}>\r\n        <option value=\"status\">Status</option>\r\n        <option value=\"user\">User</option>\r\n        <option value=\"priority\">Priority</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupSelector;\r\n","// src/components/SortSelector.js\r\nimport React from \"react\";\r\nimport \"../styles/SortSelectorStyles.css\";\r\n\r\nconst SortSelector = ({ sorting, setSorting }) => {\r\n  return (\r\n    <div className=\"sort-selector\">\r\n      <label>Sort by:</label>\r\n      <select value={sorting} onChange={(e) => setSorting(e.target.value)}>\r\n        <option value=\"priority\">Priority</option>\r\n        <option value=\"title\">Title</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortSelector;\r\n","// src/components/KanbanBoardComponent.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { fetchTickets } from \"../services/ticketApi\";\r\nimport TicketCard from \"./TicketCard\";\r\nimport GroupSelector from \"./GroupSelector\";\r\nimport SortSelector from \"./SortSelector\";\r\nimport \"../styles/KanbanBoardStyles.css\";\r\n\r\nconst KanbanBoardComponent = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [grouping, setGrouping] = useState(\"status\");\r\n  const [sorting, setSorting] = useState(\"priority\");\r\n\r\n  useEffect(() => {\r\n    const loadTickets = async () => {\r\n      const data = await fetchTickets();\r\n      if (data) {\r\n        setTickets(data.tickets);\r\n        setUsers(data.users);\r\n      }\r\n    };\r\n    loadTickets();\r\n  }, []);\r\n\r\n  const groupedTickets = tickets.reduce((acc, ticket) => {\r\n    let groupKey;\r\n    if (grouping === \"status\") groupKey = ticket.status;\r\n    else if (grouping === \"user\") {\r\n      const user = users.find((u) => u.id === ticket.userId);\r\n      groupKey = user ? user.name : \"Unassigned\";\r\n    } else if (grouping === \"priority\") groupKey = ticket.priority;\r\n    if (!acc[groupKey]) acc[groupKey] = [];\r\n    acc[groupKey].push(ticket);\r\n    return acc;\r\n  }, {});\r\n\r\n  const sortedGroups = Object.keys(groupedTickets).sort((a, b) => {\r\n    if (grouping === \"priority\") return b - a;\r\n    return a.localeCompare(b);\r\n  });\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      {/* Top-right image */}\r\n      {/* <img src=\"your-image-url.jpg\" alt=\"Top-right\" className=\"top-right-image\" /> */}\r\n\r\n      <div className=\"selectors\">\r\n        <GroupSelector grouping={grouping} setGrouping={setGrouping} />\r\n        <SortSelector sorting={sorting} setSorting={setSorting} />\r\n      </div>\r\n\r\n      <div className=\"columns\">\r\n        {sortedGroups.map((group) => (\r\n          <div key={group} className=\"column\">\r\n            <h3>{group}</h3>\r\n            {groupedTickets[group]\r\n              .sort((a, b) =>\r\n                sorting === \"priority\"\r\n                  ? b.priority - a.priority\r\n                  : a.title.localeCompare(b.title)\r\n              )\r\n              .map((ticket) => (\r\n                <TicketCard key={ticket.id} ticket={ticket} />\r\n              ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanBoardComponent;\r\n","// src/services/ticketApi.js\r\nexport const fetchTickets = async () => {\r\n  return {\r\n    tickets: [\r\n      { id: \"CAM-1\", title: \"Update User Profile Page UI\", tag: [\"Feature request\"], userId: \"usr-1\", status: \"Todo\", priority: 4 },\r\n      { id: \"CAM-2\", title: \"Add Multi-Language Support\", tag: [\"Feature Request\"], userId: \"usr-2\", status: \"In progress\", priority: 3 },\r\n      { id: \"CAM-3\", title: \"Optimize Database Queries for Performance\", tag: [\"Feature Request\"], userId: \"usr-2\", status: \"In progress\", priority: 1 },\r\n      { id: \"CAM-4\", title: \"Implement Email Notification System\", tag: [\"Feature Request\"], userId: \"usr-1\", status: \"In progress\", priority: 3 },\r\n      { id: \"CAM-5\", title: \"Enhance Search Functionality\", tag: [\"Feature Request\"], userId: \"usr-5\", status: \"In progress\", priority: 0 },\r\n    ],\r\n    users: [\r\n      { id: \"usr-1\", name: \"Anoop Sharma\", available: false },\r\n      { id: \"usr-2\", name: \"Yogesh\", available: true },\r\n      { id: \"usr-3\", name: \"Shankar Kumar\", available: true },\r\n      { id: \"usr-4\", name: \"Ramesh\", available: true },\r\n      { id: \"usr-5\", name: \"Suresh\", available: true },\r\n    ],\r\n  };\r\n};\r\n","import React from \"react\";\nimport KanbanBoardComponent from \"./components/KanbanBoardComponent\";\nimport TicketCard from \"./components/TicketCard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <KanbanBoardComponent />\n        {/* <TicketCard/> */}\n    </div>\n  );\n\n  // return <h1>Hello, Kanban Board!</h1>;\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}